{"config":"{\"firstTime\":\":]\",\"proxyMode\":\"auto\",\"autoPacScriptPath\":\":memory:\",\"ruleListUrl\":\"http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt\",\"ruleListReload\":\"720\",\"ruleListProfileId\":\"GoAgent PHP\",\"ruleListAutoProxy\":true,\"switchRules\":true,\"ruleListEnabled\":true,\"pacScriptData\":\"\",\"proxyServer\":\"\",\"quickSwitch\":false,\"quickSwitchType\":\"binary\",\"reapplySelectedProfile\":true,\"confirmDeletion\":false,\"rulesFirstTime\":\";]\",\"monitorProxyChanges\":false,\"preventProxyChanges\":false,\"lastListUpdate\":\"Tue Nov 04 2014 09:09:25 GMT+0800 (CST)\",\"refreshTab\":false,\"startupProfileId\":\"\",\"quickRuleProfileId\":\"GoAgent\",\"quickRulePatternType\":\"wildcard\",\"proxyConfigUrl\":\":memory:\"}","defaultRule":"{\"id\":\"defaultRule\",\"name\":\"Default Rule\",\"urlPattern\":\"\",\"patternType\":\"wildcard\",\"profileId\":\"direct\"}","profiles":"{\"GoAgent PHP\":{\"name\":\"GoAgent\",\"proxyMode\":\"manual\",\"proxyHttp\":\"\",\"useSameProxy\":false,\"proxyHttps\":\"\",\"proxyFtp\":\"\",\"proxySocks\":\"127.0.0.1:10800\",\"socksVersion\":5,\"proxyExceptions\":\"localhost; 127.0.0.1; <local>\",\"proxyConfigUrl\":\"http://127.0.0.1:8086/proxy.pac\",\"color\":\"blue\",\"id\":\"GoAgent PHP\"}}","quickSwitchProfiles":"[\"direct\"]","rules":"{\"New Rule3\":{\"name\":\"google\",\"urlPattern\":\"*://*.google.com.*/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"New Rule3\"},\"New Rule2\":{\"name\":\"google\",\"urlPattern\":\"*://*.google.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"New Rule2\"},\"New Rule5\":{\"name\":\"google analytics\",\"urlPattern\":\"*://*.google-analytics.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"New Rule5\"},\"New Rule6\":{\"name\":\"google apis\",\"urlPattern\":\"*://*.googleapis.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"New Rule6\"},\"New Rule\":{\"name\":\"google code\",\"urlPattern\":\"*://*.googlecode.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"New Rule\"},\"New Rule4\":{\"name\":\"google usercontent\",\"urlPattern\":\"*://*.googleusercontent.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"New Rule4\"},\"Quick Rule 6\":{\"name\":\"gstatic\",\"urlPattern\":\"*://*.gstatic.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"Quick Rule 6\"},\"goo.gl\":{\"name\":\"short link\",\"urlPattern\":\"*://goo.gl/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"goo.gl\"},\"sf\":{\"name\":\"sourceforge\",\"urlPattern\":\"*://*.sourceforge.net/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"sf\"},\"sf2\":{\"name\":\"sourceforge\",\"urlPattern\":\"*://*.sf.net/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"sf2\"},\"Quick Rule \":{\"name\":\"t.co\",\"urlPattern\":\"*://t.co/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"Quick Rule \"},\"tweetdeck\":{\"name\":\"tweetdeck\",\"urlPattern\":\"*://*.tweetdeck.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"tweetdeck\"},\"Quick Rule 2\":{\"name\":\"twing\",\"urlPattern\":\"*://*.twimg.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"Quick Rule 2\"},\"New Rule8\":{\"name\":\"wikipedia\",\"urlPattern\":\"*://*.wikipedia.org/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"New Rule8\"},\"ytimg\":{\"name\":\"ytimg\",\"urlPattern\":\"*://*.ytimg.com/*\",\"patternType\":\"wildcard\",\"profileId\":\"GoAgent PHP\",\"id\":\"ytimg\"}}","selectedProfile":"{\"id\":\"auto\",\"name\":\"[Auto Switch]\",\"proxyMode\":\"auto\",\"color\":\"auto-blue\",\"isAutomaticModeProfile\":true,\"proxyConfigUrl\":\":memory:\"}"}